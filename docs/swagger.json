{
  "swagger": "2.0",
  "info": {
    "title": "SecondHand API",
    "version": "v1",
    "contact": {
      "name": "SecondHand API",
      "url": "https://github.com/sianida26/secondhand-backend/"
    }
  },
  "tags": [
    {
      "name": "Auth"
    },
    {
      "name": "Products"
    },
    {
      "name": "Bids"
    },
    {
      "name": "Users"
    }
  ],
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "paths": {
    "/users/login": {
      "post": {
        "summary": "Login",
        "description": "Retrieve access tokens",
        "operationId": "login",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/coreLoginResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/coreLoginRequest"
            }
          }
        ],
        "tags": ["Auth"]
      }
    },
    "/users/register": {
      "post": {
        "summary": "Register",
        "description": "Retrieve access tokens",
        "operationId": "register",
        "responses": {
          "201": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/coreRegisterResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/coreRegisterRequest"
            }
          }
        ],
        "tags": ["Auth"]
      }
    },
    "/users/whoami": {
      "get": {
        "summary": "Who Am I",
        "description": "Retrieve current user info",
        "operationId": "whoami",
        "security": [
          {
            "BearerTokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/coreWhoAmIResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": ["Auth"]
      }
    },
    "/request-forgot-password": {
      "post": {
        "summary": "Forgot Password",
        "description": "Send Email Notifications",
        "operationId": "forgotPassword",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          },
          "429": {
            "description": "Too many request."
          },
          "404": {
            "description": "Not found."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/coreForgotPasswordRequest"
            }
          }
        ],
        "tags": ["Auth"]
      }
    },
    "/reset-password": {
      "post": {
        "summary": "Reset Password",
        "description": "Reset and Update Password",
        "operationId": "resetPassword",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not found."
          },
          "422": {
            "description": "Unprocessable Entity."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/coreResetPasswordRequest"
            }
          }
        ],
        "tags": ["Auth"]
      }
    },
    "/products/my-products": {
      "get": {
        "summary": "List My Products",
        "description": "Retrieve list of my products",
        "operationId": "listMyProducts",
        "security": [
          {
            "BearerTokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/coreListMyProductsResponse"
            }
          },
          "401": {
            "description": "Unauthenticated"
          },
          "403": {
            "description": "Unauthorized to run such action."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": ["Products"]
      }
    },
    "/products/available": {
      "get": {
        "summary": "Get Available Products",
        "description": "Retrieve available products",
        "operationId": "getAvailableProduct",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/coreGetAvailableProducts"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": ["Products"]
      }
    },
    "/products/delete-product/{id}": {
      "delete": {
        "summary": "Deletes Product",
        "description": "Deletes product of given id",
        "operationId": "deleteProduct",
        "security": [
          {
            "BearerTokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response."
          },
          "401": {
            "description": "Unauthenticated"
          },
          "403": {
            "description": "Unauthorized to run such action."
          },
          "404": {
            "description": "Product id not found"
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "tags": ["Products"]
      }
    },
    "/products/detail/{id}": {
      "get": {
        "summary": "Get Product by Id",
        "description": "Retrieve product By Id",
        "operationId": "getProductById",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/coreGetProductByIdResponse"
            }
          },
          "404": {
            "description": "Product id not found"
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "tags": ["Products"]
      }
    },
    "/products": {
      "post": {
        "summary": "Create Product",
        "description": "Add new product to Database",
        "operationId": "createProduct",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "security": [
          {
            "BearerTokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/coreCreateProductResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "formData",
            "required": true,
            "type": "string"
          },
          {
            "name": "price",
            "in": "formData",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "category",
            "in": "formData",
            "required": true,
            "type": "string"
          },
          {
            "name": "description",
            "in": "formData",
            "required": true,
            "type": "string"
          },
          {
            "name": "filenames",
            "in": "formData",
            "required": true,
            "type": "file"
          }
        ],
        "tags": ["Products"]
      }
    },
    "/products/{id}": {
      "put": {
        "summary": "Edit Product By Id",
        "description": "Edit product from Database",
        "operationId": "editProductById",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "security": [
          {
            "BearerTokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/coreCreateProductResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "name",
            "in": "formData",
            "required": true,
            "type": "string"
          },
          {
            "name": "price",
            "in": "formData",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "category",
            "in": "formData",
            "required": true,
            "type": "string"
          },
          {
            "name": "description",
            "in": "formData",
            "required": true,
            "type": "string"
          },
          {
            "name": "filenames",
            "in": "formData",
            "required": true,
            "type": "file"
          }
        ],
        "tags": ["Products"]
      }
    },
    "/products/history/{id}": {
      "get": {
        "summary": "Bid History By Id",
        "description": "Retrieve bid history",
        "operationId": "getBidHistoryById",
        "security": [
          {
            "BearerTokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/coreGetBidHistoryByIdResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "tags": ["Bids"]
      }
    },
    "/bids/accept/{id}": {
      "post": {
        "summary": "Accept Bid",
        "description": "Menerima Tawaran dari calon Buyer",
        "operationId": "handleAcceptBids",
        "security": [
          {
            "BearerTokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthenticated"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Bid tidak ditemukan"
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "tags": ["Bids"]
      }
    },
    "/bids/reject/{id}": {
      "post": {
        "summary": "Reject Bid",
        "description": "Menolak Tawaran dari calon Buyer",
        "operationId": "handleRejectBids",
        "security": [
          {
            "BearerTokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthenticated"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Bid tidak ditemukan"
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "tags": ["Bids"]
      }
    },
    "/bids/finish/{id}": {
      "post": {
        "summary": "Finish Bid",
        "description": "Menyelesaikan penjualan pada tawaran yang terpilih",
        "operationId": "handleFinishSale",
        "security": [
          {
            "BearerTokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthenticated"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Bid tidak ditemukan"
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "tags": ["Bids"]
      }
    },
    "/notifications": {
      "get": {
        "summary": "Get Notifications",
        "description": "Retrieve List Notifications",
        "operationId": "getNotifications",
        "security": [
          {
            "BearerTokenAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/coreGetNotifications"
              }
            }
          },
          "401": {
            "description": "Unauthenticated."
          },
          "403": {
            "description": "Unauthorized to run such action."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": ["Bids"]
      }
    },
    "/users/lengkapi-profil": {
      "post": {
        "summary": "Lengkapi Profil",
        "description": "Fill User Profile",
        "operationId": "fillProfile",
        "security": [
          {
            "BearerTokenAuth": []
          }
        ],
        "responses": {
          "201": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/coreFillProfileResponse"
            }
          },
          "401": {
            "description": "Unauthenticated."
          },
          "403": {
            "description": "Unauthorized to run such action."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "consumes": ["multipart/form-data"],
        "parameters": [
          {
            "name": "name",
            "in": "formData",
            "required": true,
            "type": "string"
          },
          {
            "name": "city",
            "in": "formData",
            "required": true,
            "type": "string"
          },
          {
            "name": "address",
            "in": "formData",
            "required": true,
            "type": "string"
          },
          {
            "name": "phone",
            "in": "formData",
            "required": true,
            "type": "string"
          },
          {
            "name": "file",
            "in": "formData",
            "required": false,
            "type": "file"
          }
        ],
        "tags": ["Users"]
      }
    }
  },
  "definitions": {
    "coreLoginRequest": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "example": "nana@gmail.com"
        },
        "password": {
          "type": "string",
          "example": "12345"
        }
      }
    },
    "coreLoginResponse": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "token": {
          "type": "string"
        }
      }
    },
    "coreWhoAmIResponse": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        }
      }
    },
    "coreRegisterRequest": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "example": "nana@gmail.com"
        },
        "password": {
          "type": "string",
          "example": "12345"
        },
        "name": {
          "type": "string",
          "example": "nana"
        }
      }
    },
    "coreRegisterResponse": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "token": {
          "type": "string"
        }
      }
    },
    "coreForgotPasswordRequest": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        }
      }
    },
    "coreResetPasswordRequest": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "password_confirmation": {
          "type": "string"
        }
      }
    },
    "coreCreateProductResponse": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        },
        "imageUrls": {
          "type": "string"
        }
      }
    },
    "coreGetBidHistoryByIdResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "buyerName": {
          "type": "string"
        },
        "buyerCity": {
          "type": "string"
        },
        "buyerPhone": {
          "type": "string"
        },
        "productName": {
          "type": "string"
        },
        "productImage": {
          "type": "string"
        },
        "productPrice": {
          "type": "integer"
        },
        "bidPrice": {
          "type": "integer"
        },
        "bidAt": {
          "type": "string"
        },
        "acceptedAt": {
          "type": "string"
        },
        "declinedAt": {
          "type": "string"
        },
        "soldAt": {
          "type": "string"
        },
        "isAcceptable": {
          "type": "boolean"
        }
      }
    },
    "coreGetNotifications": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "productName": {
          "type": "string"
        },
        "price": {
          "type": "integer"
        },
        "image": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "bidPrice": {
          "type": "integer"
        },
        "time": {
          "type": "string"
        }
      }
    },
    "coreListMyProductsResponse": {
      "type": "object",
      "properties": {
        "products": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/coreMyProducts"
          }
        },
        "diminati": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/coreDiminati"
          }
        },
        "terjual": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/coreTerjual"
          }
        }
      }
    },
    "coreGetProductByIdResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "productName": {
          "type": "string"
        },
        "images": {
          "type": "string"
        },
        "category": {
          "type": "string"
        },
        "seller": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "city": {
              "type": "string"
            }
          }
        },
        "description": {
          "type": "string"
        }
      }
    },
    "coreGetAvailableProducts": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/coreAvailableProduct"
      }
    },
    "coreFillProfileResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "coreMyProducts": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "productName": {
          "type": "string"
        },
        "price": {
          "type": "integer"
        },
        "image": {
          "type": "string"
        }
      }
    },
    "coreDiminati": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "productName": {
          "type": "string"
        },
        "price": {
          "type": "integer"
        },
        "image": {
          "type": "string"
        },
        "buyerName": {
          "type": "string"
        },
        "buyerPics": {
          "type": "string"
        },
        "bidPrice": {
          "type": "integer"
        }
      }
    },
    "coreTerjual": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "productName": {
          "type": "string"
        },
        "price": {
          "type": "integer"
        },
        "image": {
          "type": "string"
        },
        "buyerName": {
          "type": "string"
        },
        "buyerPics": {
          "type": "string"
        },
        "bidPrice": {
          "type": "integer"
        },
        "soldAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "coreAvailableProduct": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "category": {
          "type": "string"
        },
        "price": {
          "type": "integer"
        },
        "image": {
          "type": "string"
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "BearerTokenAuth": {
      "type": "apiKey",
      "in": "header",
      "name": "Authorization"
    }
  }
}
